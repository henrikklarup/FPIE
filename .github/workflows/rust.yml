name: Rust

on: [push]

jobs:
  init:
    name: Initialize
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: version_bump
        uses: mathieudutour/github-tag-action@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - run: echo ${{ steps.version_bump.outputs.new_version }} > ./version
      - uses: actions/upload-artifact@v1
        with:
          name: version
          path: ./version

  build:
    runs-on: ${{ matrix.os }}
    needs: [ init ]
    name: Build
    strategy:
      matrix:
        include:
        - os: ubuntu-latest 
          target: x86_64-unknown-linux-gnu
          filename: fpie
        - os: ubuntu-latest
          target: x86_64-unknown-linux-musl
          filename: fpie
        - os: macos-latest
          target: x86_64-apple-darwin
          filename: fpie
        - os: windows-latest
          target: x86_64-pc-windows-msvc
          filename: fpie.exe
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions/download-artifact@v2-preview
        with:
          name: version
          path: ./version
      - uses: GenesisSam/get-simple-file-action@v1.0.4
        id: openFile
        with:
          file-name: ./version/version
      - uses: actions-rs/cargo@v1
        env:
          VERSION: ${{ steps.openFile.outputs.data }}
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }} --manifest-path ./fpie/Cargo.toml

      - name: Install p7zip
        # 7Zip not available on MacOS, install p7zip via homebrew.
        run: brew install p7zip
        if: matrix.os == 'macos-latest'

      - name: Create archives
        run: 7z a ./${{ matrix.target }}.zip ./fpie/target/${{ matrix.target }}/release/${{ matrix.filename }}

      - uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.target }}.zip
          path: ./${{ matrix.target}}.zip
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      working-directory: ./fpie
    steps:
    - uses: actions/checkout@v2
    - name: Run tests
      run: cargo test --verbose --manifest-path ./fpie/Cargo.toml
  
  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [ build, test ]
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: version_bump
        uses: mathieudutour/github-tag-action@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v2-preview
        with:
          path: artifacts
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: "${{ format('v{0}', steps.version_bump.outputs.new_version) }}"
          files: |
            ./artifacts/**/*.zip
